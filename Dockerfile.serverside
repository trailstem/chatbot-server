# # 開発環境用
# FROM golang:1.20.4-alpine3.17 as dev
# WORKDIR /go/src/app
# RUN apk update && apk add git
# RUN go install github.com/cosmtrek/air@latest && \
#   go install github.com/cweill/gotests/gotests@latest && \
#   go install github.com/go-delve/delve/cmd/dlv@latest && \
#   go install github.com/fatih/gomodifytags@latest && \
#   go install github.com/josharian/impl@latest && \
#   go install golang.org/x/tools/gopls@latest && \
#   go install github.com/ramya-rao-a/go-outline@latest
# COPY . .
# CMD ["air", "-c", ".air.toml"]

## 本番環境用のbuilder
# ビルド用ステージ
# docker build -f Dockerfile.serverside -t chatbot-repo-server --platform linux/amd64 .
# docker run -p 8080:8080 -t chatbot-repo-server
FROM golang:1.20.4-alpine3.17 as builder
WORKDIR /app
COPY . .
RUN apk update && apk add git
RUN go mod download
# バイナリをビルド
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o main

## 実行用ステージ
FROM alpine:3.17
# ビルド用ステージからバイナリをコピー
COPY --from=builder /app/main /app/main
COPY --from=builder /app/.env /app/.env
EXPOSE 8080

# 実行コマンドを指定
CMD ["/app/main"]
